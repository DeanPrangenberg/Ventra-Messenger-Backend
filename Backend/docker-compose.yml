version: "3.8"

services:
  vm-api:
    image: backend-vm-api
    build:
      context: ..
      dockerfile: Backend/VM-API/Dockerfile
    ports:
      - "127.0.0.1:8881:8881"
    networks:
      - ventra-net

  vm-auth:
    image: backend-vm-auth
    build:
      context: ..
      dockerfile: Backend/VM-AUTH/Dockerfile
    expose:
      - "8882"
    networks:
      - ventra-net

  vm-core:
    image: backend-vm-core
    build:
      context: ..
      dockerfile: Backend/VM-CORE/Dockerfile
    expose:
      - "8883"
    networks:
      - ventra-net

  vm-md:
    image: backend-vm-md
    build:
      context: ..
      dockerfile: Backend/VM-MD/Dockerfile
    expose:
      - "8884"
    networks:
      - ventra-net

  vm-logger:
    image: backend-vm-logger
    build:
      context: ..
      dockerfile: Backend/VM-LOGGER/Dockerfile
    expose:
      - "8885"
    networks:
      - ventra-net

  vm-redis-api:
    image: backend-vm-redis-api
    build:
      context: ..
      dockerfile: Backend/VM-REDIS-API/Dockerfile
    expose:
      - "8886"
    networks:
      - ventra-net


  vm-main-db:
    image: postgres:15
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: testPassword1234
      POSTGRES_DB: main_db
    expose:
      - "8890"
    networks:
      - ventra-net

  vm-redis:
    image: redis:7
    expose:
      - "8891"
    networks:
      - ventra-net

  vm-vault:
    image: vault:latest
    expose:
      - "8892:8892"
    networks:
      - ventra-net

  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ventra-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - kafka-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - ventra-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: kafka-zookeeper:2181
    networks:
      - ventra-net

  kafka-init:
    build:
      context: ./init-kafka
    depends_on:
      - kafka
    networks:
      - ventra-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - /bin/sh
      - -c
      - |
        echo '
        global:
          scrape_interval: 15s
        scrape_configs:
          - job_name: "prometheus"
            static_configs:
              - targets: ["localhost:9090"]
          - job_name: "node-exporter"
            static_configs:
              - targets: ["node-exporter:9100"]
          - job_name: "vm-services"
            static_configs:
              - targets: ["vm-api:8881", "vm-auth:8882", "vm-logic:8883"]
        ' > /etc/prometheus/prometheus.yml && \
        /bin/prometheus --config.file=/etc/prometheus/prometheus.yml
    networks:
      - ventra-net

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - ventra-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - ventra-net

networks:
  ventra-net:
    driver: bridge
