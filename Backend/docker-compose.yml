services:
  vm-api:
    image: backend-vm-api
    build:
      context: ..
      dockerfile: Backend/VM-API/Dockerfile
    ports:
      - "127.0.0.1:8881:8881"
    networks:
      - ventra-net

  vm-auth:
    image: backend-vm-auth
    build:
      context: ..
      dockerfile: Backend/VM-AUTH/Dockerfile
    expose:
      - "8882"
    networks:
      - ventra-net

  vm-logic:
    image: backend-vm-logic
    build:
      context: ..
      dockerfile: Backend/VM-LOGIC/Dockerfile
    expose:
      - "8883"
    networks:
      - ventra-net

  vm-main-db:
    image: postgres:15
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: testPassword1234
      POSTGRES_DB: main_db
    expose:
      - "8884"
    networks:
      - ventra-net

  vm-redis:
    image: redis:7
    expose:
      - "8885"
    networks:
      - ventra-net

  # Zookeeper f√ºr Kafka
  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ventra-net

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - kafka-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - ventra-net

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: kafka-zookeeper:2181
    networks:
      - ventra-net

    # Kafka Init-Container
  kafka-init:
    build:
      context: ./init-kafka
    depends_on:
      - kafka
    networks:
      - ventra-net


networks:
  ventra-net:
    driver: bridge
