apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: kafka
data:
  server.properties: |
    # KRaft Mode Configuration
    process.roles=broker,controller
    controller.quorum.voters=1@kafka-0.kafka.kafka.svc.cluster.local:9093,2@kafka-1.kafka.kafka.svc.cluster.local:9093,3@kafka-2.kafka.kafka.svc.cluster.local:9093
    controller.listener.names=CONTROLLER
    listeners=PLAINTEXT://:9092,CONTROLLER://:9093
    listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    advertised.listeners=PLAINTEXT://:9092
    inter.broker.listener.name=PLAINTEXT
    quorum.voters=1@kafka-0.kafka.kafka.svc.cluster.local:9093,2@kafka-1.kafka.kafka.svc.cluster.local:9093,3@kafka-2.kafka.kafka.svc.cluster.local:9093
    
    # Basic Configuration
    broker.id=0
    num.network.threads=3
    num.io.threads=8
    socket.send.buffer.bytes=102400
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=104857600
    log.dirs=/var/lib/kafka/data
    num.partitions=3
    num.recovery.threads.per.data.dir=1
    offsets.topic.replication.factor=3
    transaction.state.log.replication.factor=3
    transaction.state.log.min.isr=2
    log.retention.hours=168
    log.segment.bytes=1073741824
    log.retention.check.interval.ms=300000
    zookeeper.connect=
    zookeeper.connection.timeout.ms=6000
    group.initial.rebalance.delay.ms=0
    
    # Performance Settings
    num.replica.fetchers=4
    replica.fetch.max.bytes=10485760
    replica.fetch.wait.max.ms=500
    
    # Monitoring
    metric.reporters=kafka.metrics.KafkaYammerMetrics
    auto.include.jmx.reporter=true